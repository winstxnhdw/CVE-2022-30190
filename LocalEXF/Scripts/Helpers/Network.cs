using System;
using System.IO;
using System.Net.Http;
using System.Net.Sockets;
using System.Threading.Tasks;

public class Network : IDisposable {
    MultipartFormDataContent RequestContent { get; }
    HttpClient HTTPClient { get; }

    Network() {
        this.RequestContent = new MultipartFormDataContent();
        this.HTTPClient = new HttpClient();
    }

    public Network AddString(string key, string value) {
        StringContent stringContent = new StringContent(value);
        this.RequestContent.Add(stringContent, key);
        return this;
    }

    public Network AddFile(string key, string filePath) {
        FileStream fileStream = File.OpenRead(filePath);
        StreamContent streamContent = new StreamContent(fileStream);
        this.RequestContent.Add(streamContent, key, filePath);
        return this;
    }

    public async Task<Network> Post(string hostNameOrAddress) {
        await this.HTTPClient.PostAsync(hostNameOrAddress, this.RequestContent);
        return this;
    }

    public void Dispose() {
        this.RequestContent.Dispose();
        this.HTTPClient.Dispose();
    }

    public static Network CreateFormData() => new Network();

    public static bool Ping(string hostNameOrAddress, int portNumber) {
        try {
            new TcpClient(hostNameOrAddress, portNumber).Dispose();
            return true;
        }

        catch (SocketException) {
            return false;
        }
    }
}